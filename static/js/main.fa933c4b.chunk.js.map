{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BJ,IAC/B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gBCsIDC,G,kNAnDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,uDAQZ,WAIEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACA,yBAASV,UAAU,YAAnB,SACGS,EAEC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SAEIU,EAAOP,KAAI,SAAAe,GAAK,OACd,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GAjCXE,IAAMC,YC7FxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa933c4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\" >{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres__genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes =\r\n{\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n\r\n};\r\n\r\nexport default Movie;","\n//import PropTypes from \"prop-types\";\n\n\n// const foodILike = [\n//   {\n//     id: 1,\n//     name: \"kimchi\",\n//     image:\n//     \"https://kelliesfoodtoglow.com/wp-content/uploads/2016/10/kimchi1.jpg\"\n//     ,rating: 5\n//   },\n//   {\n//     id: 2,\n//     name: \"Samgyeopsal\",\n//     image:\n//     \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F7%2F77%2FSamgyeopsal-gui.jpg%2F1200px-Samgyeopsal-gui.jpg&f=1&nofb=1\"\n//     ,rating: 4.9\n\n//   }\n// ]\n\n/* Function 을 이용해 구현하는 방법 */\n// function renderFood(dish){\n//   console.log(dish)\n//   return <Food key={dish.id} name={dish.name} picture={dish.image} />\n// }\n\n// function App() {\n//   return (\n//     <div>\n//       {foodILike.map(renderFood)}\n//     </div>\n//   );\n// }\n/***********************************/\n// function Food({ name,picture, rating }){\n//   return (\n//   <div>\n//     <h2>I like {name}</h2>\n//     <h4>{rating}/5.0</h4>\n//     <img src ={picture} alt={name}/>\n\n//   </div>\n//   );\n// }\n\n// Food.propTypes = {\n//   //isRequired -> 필수를 의미\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   rating: PropTypes.number.isRequired\n// };\n\n// function App() {\n//   return (\n//     <div>\n//       {foodILike.map(dish=>(\n//         <Food key={dish.id} name ={dish.name} picture={dish.image} rating={dish.rating} />\n//       ))}\n//     </div>\n//   );\n// }\n\n/*\nclass App extends React.Component{\n  state = {\n    count: 0\n  };\n  add = () => {\n    //this.setState({count: this.state.count + 1 });  // this.state.count 는 좋지않은 코드\n    this.setState(current => ({ count: this.state.count + 1})); // setState를 호출하면 render를 Refresh 해줌.\n  };\n  minus = () => {\n    this.setState(current => ({ count: this.state.count - 1}));\n  };\n\n\n  componentDidMount(){console.log(\"component rendered\");}// Component가 render를 마치고 Mount될 때 호출\n  componentDidUpdate(){console.log(\"I just Updated\");}// Component가 Update될 때 호출 ex) plus/minus 버튼을 누르면 render가 Refresh\n  componentWillUnmount(){console.log(\"Good Bye\");} // Component가 Unmount될 때 호출\n  render(){\n    console.log(\"I'm rendering\");\n    return <div>\n        <h1>The number is: {this.state.count}</h1>\n        <button onClick={this.add}>Add</button>\n        <button onClick={this.minus}>Minus</button>\n      </div>\n  }\n}\n*/\nimport React from 'react';\nimport axios from \"axios\"; \nimport Movie from \"./Movie\";\nimport \"./App.css\"\n\n// 설치한 것들 : 'npm i axos', 'npm i gh-pages', 'npm i prop-types'\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");  // sort_by=rating\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    // setTimeout(() => {\n    //   this.setState({isLoading: false});  // setState 에서 state에 있는 항목을 호출할 필요는 없다, 새로 생성해도 됨.\n    // },6000);\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading\n        ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n        ) : (\n          <div className=\"movies\">\n            {\n              movies.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))   //map을 사용하면 return이 있어야함\n            }\n          </div>\n        )}\n    </section>\n    );\n  }\n}\n\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}